#
#Class for listener of incoming data
#Maybe slightly drunk
#

#Base code for origin of data
#Extend this class when your class needs data
#Which is always
class DataSource
	constructor: (@createData) ->
		@dataSource ?= -> #No Data
		@listeners = []
			
	notifyListeners: (newData) ->
		l.onData(newData, this) for l in @listeners
		
	addListener: (l) ->
		@listeners.append(l)
		
#Used when your data is Time. An example of this is a clock
#If what you want is to request data (say a system call every 30 seconds)
#this is not your time
#
class TimeDataSource extends DataSource
	
	#Interval is in milliseconds
	constructor: (interval) ->
		super do ->
			lastTime = Date.now()
			return ->
				curTime = Date.now()
				dif = curTime - lastTime
				lastTime = curTime
				@notifyListeners(dif)
				setTimeout(=>this.dataSource(), interval)

class IntervalDataRequest extends DataSource
	constructor: (onInterval, interval) ->
		
