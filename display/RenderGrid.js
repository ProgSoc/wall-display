// Generated by CoffeeScript 1.6.3
(function() {
  var Grid;

  Grid = (function() {
    function Grid(canvas, rows, cols) {
      var c;
      this.canvas = canvas;
      this.rows = rows;
      this.cols = cols;
      this.cells = (function() {
        var _i, _ref, _results;
        _results = [];
        for (c = _i = 0, _ref = this.rows * this.cols; 0 <= _ref ? _i <= _ref : _i >= _ref; c = 0 <= _ref ? ++_i : --_i) {
          _results.push(new ViewPort());
        }
        return _results;
      }).call(this);
      this.c2d = this.canvas.getContext('2d');
      this.__isRendering = false;
    }

    Grid.prototype.width = function() {
      return this.canvas.width;
    };

    Grid.prototype.height = function() {
      return this.canvas.height;
    };

    Grid.prototype.render = function() {
      var cellHeight, cellWidth, i, viewport, x, y, _i, _len, _ref, _ref1;
      if (!this.__isRendering) {
        this.__isRendering = true;
        cellWidth = this.width() / this.cols;
        cellHeight = this.height / this.rows;
        _ref = this.cells;
        for (viewport = _i = 0, _len = _ref.length; _i < _len; viewport = ++_i) {
          i = _ref[viewport];
          if (viewport.needsRender()) {
            _ref1 = [i % this.rows, Math.floor(i / this.rows)], x = _ref1[0], y = _ref1[1];
            this.c2d.translate(x, y);
            viewport.render(this.c2d);
            this.c2d.restore();
          }
        }
        return this.__isRendering = false;
      }
    };

    return Grid;

  })();

  window.Grid = Grid;

}).call(this);
